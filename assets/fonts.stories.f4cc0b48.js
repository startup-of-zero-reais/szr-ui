var i=Object.defineProperty;var r=(e,t)=>i(e,"name",{value:t,configurable:!0});import"./index.0dbe6625.js";import{c as o,A as d,M as c}from"./Props.9e1ec34b.js";import"./jsx-runtime.a757349a.js";import"./iframe.72c79fb1.js";import{T as l}from"./tokens-grid.6e2fc146.js";import{d as u}from"./index.c9f1980c.js";import"./string.06c2ddfa.js";import"./index.00d07e28.js";import"./es.map.constructor.eef067e3.js";import"./es.number.to-fixed.f33d78ae.js";function p(){return p=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a])}return e},p.apply(this,arguments)}r(p,"_extends");const y={},f="wrapper";function m({components:e,...t}){return o(f,p({},y,t,{components:e,mdxType:"MDXLayout"}),o(c,{title:"Tokens/Fonts",mdxType:"Meta"}),o("h1",null,"Fonts"),o("p",null,"Fontes que voc\xEA pode utilizar"),o(l,{tokens:u,mdxType:"TokensGrid"}))}r(m,"MDXContent");m.isMDXComponent=!0;const x=r(()=>{throw new Error("Docs-only story")},"__page");x.parameters={docsOnly:!0};const n={title:"Tokens/Fonts",includeStories:["__page"]},T={};n.parameters=n.parameters||{};n.parameters.docs={...n.parameters.docs||{},page:()=>o(d,{mdxStoryNameToKey:T,mdxComponentAnnotations:n},o(m,null))};const X=["__page"];export{X as __namedExportsOrder,x as __page,n as default};
//# sourceMappingURL=fonts.stories.f4cc0b48.js.map
